{{- if .Values.api.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "identityserver4admin.fullname" . }}-api
  labels:
    {{- include "identityserver4admin.labelsApi" . | nindent 4 }}
spec:
  {{- if not .Values.api.autoscaling.enabled }}
  replicas: {{ .Values.api.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "identityserver4admin.selectorLabelsApi" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.api.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "identityserver4admin.selectorLabelsApi" . | nindent 8 }}
    spec:
      {{- with .Values.api.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "identityserver4admin.serviceAccountNameApi" . }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-api
          securityContext:
            {{- toYaml .Values.api.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: Serilog__MinimumLevel__Default
              value: Debug
            {{- if .Values.identity.ssl.enabled }}
            - name: DockerConfiguration__UpdateCaCertificate
              value: "true"
            - name: ASPNETCORE_HTTPS_PORT
              value: "443"
            - name: ASPNETCORE_URLS
              value: https://*:443
            - name: ASPNETCORE_Kestrel__Certificates__Default__Path
              value: /usr/local/share/ca-certificates/tls.crt
            - name: ASPNETCORE_Kestrel__Certificates__Default__KeyPath
              value: /usr/local/share/ca-certificates/tls.key
            {{- end }}
          envFrom:
            - secretRef:
                name: database-credentials
          volumeMounts:
            - name: "config"
              mountPath: "/app/appsettings.json"
              subPath: "appsettings.json"
            - name: "serilog"
              mountPath: "/app/serilog.json"
              subPath: "serilog.json"
            {{- if .Values.api.ssl.enabled }}
            - name: certs
              mountPath: /usr/local/share/ca-certificates/ca.crt
              subPath: ca.crt
              readOnly: true
            - name: certs
              mountPath: /usr/local/share/ca-certificates/tls.crt
              subPath: tls.crt
              readOnly: true
            - name: certs
              mountPath: /usr/local/share/ca-certificates/tls.key
              subPath: tls.key
              readOnly: true
            {{- end -}}
          {{- if .Values.api.ssl.enabled }}
          ports:
            - name: https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: https
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /health
              port: https
              scheme: HTTPS
          {{- else }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
          {{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
      dnsPolicy: ClusterFirstWithHostNet
      volumes:
        - name: "config"
          configMap:
            name: "{{ include "identityserver4admin.fullname" . }}-api-app-settings"
        - name: "serilog"
          configMap:
            name: "{{ include "identityserver4admin.fullname" . }}-serilog"
        {{- if .Values.api.ssl.enabled }}
        - name: certs
          secret:
            secretName: {{ .Values.api.ssl.secretName }}
            items:
            - key: ca.crt
              path: ca.crt
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
        {{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}